@inject ICategoriaService _categoriaServicio
@inject ISnackbar _snackBar

<MudDialog Style="width:400px">

    <DialogContent>
        <MudContainer Style="max-height: 400px; overflow-y: scroll" Class="m-0 p-0">

            <EditForm Model="@_categoria">

                <MudTextField @bind-Value="@_categoria.NombreCategoria" Class="mb-3"
                              Label="Nombre" Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Badge" />                               
            </EditForm>

        </MudContainer>

    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" Color="Color.Default" OnClick="Cancel">Cancelar</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="Guardar">Guardar</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [Parameter]
    public CategoriaDTO _categoria { get; set; } = new CategoriaDTO();
    private MudTextField<string> multilineReference;

    List<CategoriaDTO> listaCategoria = new List<CategoriaDTO>();
    public CategoriaDTO categoriaSeleccionado;


    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }
    

    protected override async Task OnInitializedAsync()
    {
        var resultado = await _categoriaServicio.Lista();

        if (resultado.status)
        {
            listaCategoria = resultado.value!;
            if (_categoria.IdCategoria != 0)
                categoriaSeleccionado = listaCategoria.FirstOrDefault(p => p.IdCategoria == _categoria.IdCategoria)!;
            else
                categoriaSeleccionado = listaCategoria.First();
        }        
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private async Task Guardar()
    {
        if (_categoria.IdCategoria == 0) // Nueva categoría
        {
            var response = await _categoriaServicio.Crear(_categoria);
            if (response.status)
            {
                _snackBar.Add("Categoria fue creada", Severity.Success, a => a.VisibleStateDuration = 500);
                MudDialog.Close(DialogResult.Ok(true));
            }
            else
            {
                _snackBar.Add("Error al guardar la categoría", Severity.Error, a => a.VisibleStateDuration = 500);
            }
        }
        else // Editando una categoría
        {
            var resultado = await _categoriaServicio.Editar(_categoria);
            if (resultado)
            {
                _snackBar.Add("Categoria fue modificada", Severity.Success, a => a.VisibleStateDuration = 500);
                MudDialog.Close(DialogResult.Ok(true));
            }
            else
            {
                _snackBar.Add("Error al guardar los cambios", Severity.Error, a => a.VisibleStateDuration = 500);
            }
        }
    }

}
